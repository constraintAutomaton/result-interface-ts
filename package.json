{
  "name": "result-interface",
  "module": "index.ts",
  "type": "module",
  "author": {
    "name": "Bryan-Elliott Tam"
  },
  "description": "A tiny utility (mainly interfaces) with zero dependencies to standardize handling results that may succeed or fail, inspired by Go-style error handling.",
  "homepage": "https://github.com/constraintAutomaton/result-interface-ts",
  "license": "MIT",
  "version": "2.3.0",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "keywords": [
    "type-safety",
    "typing",
    "error-handling",
    "typescript-utility",
    "safe-result",
    "safe-promises"
  ],
  "exports": {
    ".": {
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.js",
      "types": "./dist/index.d.ts"
    }
  },
  "files": [
    "dist",
    "LICENSE",
    "README.md"
  ],
  "devDependencies": {
    "@types/bun": "latest"
  },
  "peerDependencies": {
    "typescript": "^5"
  },
  "scripts": {
    "build:all" : "bun run build && bun run build:cjs",
    "build": "bun build ./src/index.ts --outdir dist --sourcemap --outdir dist/esm --production && tsc --emitDeclarationOnly",
    "build:cjs": "bun build ./src/index.ts --format 'cjs' --outdir dist/cjs --sourcemap --production && tsc --emitDeclarationOnly",
    "publish-npm": "build:all && npm publish"
  }
}